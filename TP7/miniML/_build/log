# dune run
# OCAMLPARAM: unset
# Workspace root: "/home/hugo/Documents/Prog Fonct/TP7/miniML"
$ /usr/bin/nproc > /tmp/dune2f6e49.output 2> /dev/null
# Auto-detected concurrency: 8
# disable binary cache
$ /usr/bin/ocamlc.opt -config > /tmp/duned5457f.output
# Dune context:
#  { name = "default"
#  ; kind = "default"
#  ; profile = Dyn
#  ; merlin = true
#  ; for_host = None
#  ; fdo_target_exe = None
#  ; build_dir = "default"
#  ; toplevel_path = Some External "/home/hugo/.opam/default/lib/toplevel"
#  ; ocaml_bin = External "/usr/bin"
#  ; ocaml = Ok External "/home/hugo/.opam/default/bin/ocaml"
#  ; ocamlc = External "/usr/bin/ocamlc.opt"
#  ; ocamlopt = Ok External "/usr/bin/ocamlopt.opt"
#  ; ocamldep = Ok External "/usr/bin/ocamldep.opt"
#  ; ocamlmklib = Ok External "/usr/bin/ocamlmklib.opt"
#  ; env =
#      map
#        { "DUNE_OCAML_HARDCODED" : "/home/hugo/.opam/default/lib"
#        ; "DUNE_OCAML_STDLIB" : "/usr/lib/ocaml"
#        ; "DUNE_SOURCEROOT" : "/home/hugo/Documents/Prog Fonct/TP7/miniML"
#        ; "INSIDE_DUNE" :
#            "/home/hugo/Documents/Prog Fonct/TP7/miniML/_build/default"
#        ; "OCAMLFIND_IGNORE_DUPS_IN" :
#            "/home/hugo/Documents/Prog Fonct/TP7/miniML/_build/install/default/lib"
#        ; "OCAMLPATH" :
#            "/home/hugo/Documents/Prog Fonct/TP7/miniML/_build/install/default/lib"
#        ; "OCAMLTOP_INCLUDE_PATH" :
#            "/home/hugo/Documents/Prog Fonct/TP7/miniML/_build/install/default/lib/toplevel"
#        ; "OCAML_COLOR" : "always"
#        ; "OPAMCOLOR" : "always"
#        }
#  ; findlib_path = [ External "/home/hugo/.opam/default/lib" ]
#  ; arch_sixtyfour = true
#  ; natdynlink_supported = true
#  ; supports_shared_libraries = true
#  ; ocaml_config =
#      { version = "4.08.1"
#      ; standard_library_default = "/usr/lib/ocaml"
#      ; standard_library = "/usr/lib/ocaml"
#      ; standard_runtime = "the_standard_runtime_variable_was_deleted"
#      ; ccomp_type = "cc"
#      ; c_compiler = "x86_64-linux-gnu-gcc"
#      ; ocamlc_cflags = [ "-O2"; "-fno-strict-aliasing"; "-fwrapv"; "-fPIC" ]
#      ; ocamlc_cppflags = [ "-D_FILE_OFFSET_BITS=64"; "-D_REENTRANT" ]
#      ; ocamlopt_cflags = [ "-O2"; "-fno-strict-aliasing"; "-fwrapv" ]
#      ; ocamlopt_cppflags = [ "-D_FILE_OFFSET_BITS=64"; "-D_REENTRANT" ]
#      ; bytecomp_c_compiler =
#          [ "x86_64-linux-gnu-gcc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-fPIC"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ; "-D_REENTRANT"
#          ]
#      ; bytecomp_c_libraries = [ "-lm"; "-ldl"; "-lpthread" ]
#      ; native_c_compiler =
#          [ "x86_64-linux-gnu-gcc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ; "-D_REENTRANT"
#          ]
#      ; native_c_libraries = [ "-lm"; "-ldl" ]
#      ; cc_profile = [ "-pg" ]
#      ; architecture = "amd64"
#      ; model = "default"
#      ; int_size = 63
#      ; word_size = 64
#      ; system = "linux"
#      ; asm = [ "x86_64-linux-gnu-as" ]
#      ; asm_cfi_supported = true
#      ; with_frame_pointers = false
#      ; ext_exe = ""
#      ; ext_obj = ".o"
#      ; ext_asm = ".s"
#      ; ext_lib = ".a"
#      ; ext_dll = ".so"
#      ; os_type = "Unix"
#      ; default_executable_name = "a.out"
#      ; systhread_supported = true
#      ; host = "x86_64-pc-linux-gnu"
#      ; target = "x86_64-pc-linux-gnu"
#      ; profiling = true
#      ; flambda = false
#      ; spacetime = false
#      ; safe_string = false
#      ; exec_magic_number = "Caml1999X025"
#      ; cmi_magic_number = "Caml1999I025"
#      ; cmo_magic_number = "Caml1999O025"
#      ; cma_magic_number = "Caml1999A025"
#      ; cmx_magic_number = "Caml1999Y025"
#      ; cmxa_magic_number = "Caml1999Z025"
#      ; ast_impl_magic_number = "Caml1999M025"
#      ; ast_intf_magic_number = "Caml1999N025"
#      ; cmxs_magic_number = "Caml1999D025"
#      ; cmt_magic_number = "Caml1999T025"
#      ; natdynlink_supported = true
#      ; supports_shared_libraries = true
#      ; windows_unicode = false
#      }
#  }
$ (cd _build/default && /usr/bin/ocamldep.opt -modules -impl miniml/eval.ml) > _build/default/miniml/.miniml.objs/eval.ml.d
$ (cd _build/default && /usr/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w -39-27 -g -bin-annot -I miniml/.miniml.objs/byte -no-alias-deps -opaque -open Miniml -o miniml/.miniml.objs/byte/miniml__Eval.cmo -c -impl miniml/eval.ml)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w -39-27 -g -I miniml/.miniml.objs/byte -I miniml/.miniml.objs/native -intf-suffix .ml -no-alias-deps -opaque -open Miniml -o miniml/.miniml.objs/native/miniml__Eval.cmx -c -impl miniml/eval.ml)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -w -39-27 -g -a -o miniml/miniml.cmxa miniml/.miniml.objs/native/miniml.cmx miniml/.miniml.objs/native/miniml__Expr.cmx miniml/.miniml.objs/native/miniml__Miniml_parse.cmx miniml/.miniml.objs/native/miniml__Miniml_lex.cmx miniml/.miniml.objs/native/miniml__Eval.cmx)
$ (cd _build/default && /usr/bin/ocamlc.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -bin-annot -I test/.main.eobjs/byte -I miniml/.miniml.objs/byte -no-alias-deps -opaque -o test/.main.eobjs/byte/main.cmo -c -impl test/main.ml)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I test/.main.eobjs/byte -I test/.main.eobjs/native -I miniml/.miniml.objs/byte -I miniml/.miniml.objs/native -intf-suffix .ml -no-alias-deps -opaque -o test/.main.eobjs/native/main.cmx -c -impl test/main.ml)
$ (cd _build/default && /usr/bin/ocamlopt.opt -w @1..3@5..28@30..39@43@46..47@49..57@61..62-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -o test/main.exe miniml/miniml.cmxa test/.main.eobjs/native/main.cmx)
$ (cd _build/default/test && ./main.exe)
> testing let x = 1  in x + 1
> Résultat: 2
> testing if 1 = 1 then 2 else 3
> Résultat: 2
> testing if false then 2 else 3
> Résultat: 3
> testing 1,2
> Résultat: (fun _fn->_fn ( 1) ( 2))
> testing let x = 2 in let y=x, (x+1) in (fst y) + (snd y) 
> Résultat: 5
> testing []
> Résultat: []
> testing [1]
> Résultat: 1 :: []
> testing 1 :: []
> Résultat: 1 :: []
> testing 1 :: []
> Résultat: 1 :: []
> testing match [1;2] with [] -> 0 | x::l -> x
> Résultat: 1
> testing (tee 3) + (tee 4)
> Résultat: 347
> testing raise 1
> Résultat: raise 1
> testing try raise 1 with x -> x+1
> Résultat: 2
> testing 3 < 4
> Résultat: Pas encore fait, ligne 115
> testing 3 > 4
> Résultat: Pas encore fait, ligne 116
> testing let rec f = fun n -> if n < 2 then 1 else f (n-1) + f (n-2) in f 5
> Résultat: Pas encore fait, ligne 55
> testing let x = 1  in let x = x + x + x in x + x
> Résultat: 6
> testing let t = tee in (t 3) < (t 9)
> Résultat: Pas encore fait, ligne 55
